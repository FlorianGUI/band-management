name: Build

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"
    tags:        
      - '*'

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4

      -
        name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      -
        name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          tags: |
            ghcr.io/${{ github.repository }}:latest
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:latest
          cache-to: type=local,dest=/tmp/.buildx-cache
          pull: true
          load: true
      -
        name: Test install oca_all in docker image
        run: |
          docker compose up -d db
          sleep 10 # Attendre que PostgreSQL soit prÃªt
          docker compose run --rm anyblok anyblok_createdb -c /etc/app.cfg 

      -
        name: Push image
        if: ${{ github.repository_owner == 'petrus-v' && github.ref == 'refs/heads/main' }}
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          context: .
          file: Dockerfile
          tags: |
            ghcr.io/${{ github.repository }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=inline
          push: true

      -
        name: Push image with tag if tagged
        if: ${{ github.repository_owner == 'petrus-v' && startsWith(github.ref, 'refs/tags/') }}
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          context: .
          file: Dockerfile
          tags: |
            ghcr.io/${{ github.repository }}:${{  github.ref_name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=inline
          push: true
